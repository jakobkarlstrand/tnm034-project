function id = tnm034(im)
%%im: Image of unknown face, RGB-image in uint8 format in the range [0,255]
%%id: The identity number (integer) of the identified person,
%%i.e. %1i, ‘2’,...,‘16’ for the persons belonging to ‘db1’ %
%%and 0’ for all other faces.

%% Load data
data = load('computedData.mat');
weight = data.weight;
averageFace = data.averageFace;
u = data.u;

%% Preprocessing
im = lighting_compensation(im,0.20);
EyeMap = eye_detection(im);
MouthMap = mouth_detection(im);

[lEye_c, rEye_c, mouth_c, e_regions,m_regions ] = face_triangle_coordinates(MouthMap, EyeMap);
[rotated_image, lEye_rotated, rEye_rotated, mouth_rotated] = rotate_image(im, lEye_c, rEye_c, mouth_c);
cropped_image = crop_face(rotated_image, lEye_rotated, rEye_rotated);

%% Convert image to vector
cropped_image = rgb2gray(cropped_image);
cropped_image = reshape(cropped_image,[],1);
phi = cropped_image - averageFace;

%% Calculate weights for current image
im_weight = zeros(1,16);
    for j = 1:16
        im_weight(1,j) = u(:,index(j))'* phi;
    end
    
    error = 10000; %%minimum error
    index2 = 0;
    
    for i = 1:16
        sqrt(sum((weight2 - weight(i,:)).^2));
        if sqrt(sum((weight2 - weight(i,:)).^2)) < error
            error = sqrt(sum((weight2 - weight(i,:)).^2)); %%update minimum error
            index2 = i; %%update index.
        end
    end

    if error > 16.7
        index2 = 0;
    end
